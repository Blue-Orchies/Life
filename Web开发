Web开发

第一模块：Python基础

一、发展史
1989年圣诞节 =》 Guido von Rossum 开始编写Python语言的编译器
1991年2月 =》 第一个Python编译器诞生
1994年1月 =》 Python 1.0 正式发布
2000年10月16日 =》 Python 2.0 正式发布
2008年12月3日 =》 Python 3.0 正式发布

二、优点
1.语法优美，易上手
2.被广泛应用于数据分析和机器学习领域
3.可移植性高，可以工作于不同的操作系统
4.支持面向对象编程和函数式编程
5.代码严谨，可读性强

三、缺点
1.执行效率低
2.代码无法加密
3.开发框架多

四、应用领域
Web开发、云计算、DevOps、爬虫、自动化测试、数据分析、机器学习等领域。

五、安装Python解释器
Win10：Python官网（python.org） => Python-3.9.0
版本检测：
python sys.py
import sys
print(sys.version)

六、第一行代码
hello.py
"""
第一个Python程序 - hello，world！
向伟大的Dennis M. Ritchie先生致敬

Version：0.1
Author: 季延升
"""
print("hello，world")
# print("你好，世界！")

七、python开发工具
IDLE - 自带的集成开发工具
IPython - 更好的交互式编程工具
Sublime Text - 高级文本编辑器
Visual Studio Code - 微软的开发工具
Pycharm - Python开发神器

八、Python开发（兴趣是最好的老师）
1.Python之禅
import this 
2.trutle绘制国旗
import turtle


def draw_rectangle(x, y, width, height):
    """绘制矩形"""
    turtle.goto(x, y)
    turtle.pencolor('red')
    turtle.fillcolor('red')
    turtle.begin_fill()
    for i in range(2):
        turtle.forward(width)
        turtle.left(90)
        turtle.forward(height)
        turtle.left(90)
    turtle.end_fill()


def draw_star(x, y, radius):
    """绘制五角星"""
    turtle.setpos(x, y)
    pos1 = turtle.pos()
    turtle.circle(-radius, 72)
    pos2 = turtle.pos()
    turtle.circle(-radius, 72)
    pos3 = turtle.pos()
    turtle.circle(-radius, 72)
    pos4 = turtle.pos()
    turtle.circle(-radius, 72)
    pos5 = turtle.pos()
    turtle.color('yellow', 'yellow')
    turtle.begin_fill()
    turtle.goto(pos3)
    turtle.goto(pos1)
    turtle.goto(pos4)
    turtle.goto(pos2)
    turtle.goto(pos5)
    turtle.end_fill()


def main():
    """主程序"""
    turtle.speed(12)
    turtle.penup()
    x, y = -270, -180
    # 画国旗主体
    width, height = 540, 360
    draw_rectangle(x, y, width, height)
    # 画大星星
    pice = 22
    center_x, center_y = x + 5 * pice, y + height - pice * 5
    turtle.goto(center_x, center_y)
    turtle.left(90)
    turtle.forward(pice * 3)
    turtle.right(90)
    draw_star(turtle.xcor(), turtle.ycor(), pice * 3)
    x_poses, y_poses = [10, 12, 12, 10], [2, 4, 7, 9]
    # 画小星星
    for x_pos, y_pos in zip(x_poses, y_poses):
        turtle.goto(x + x_pos * pice, y + height - y_pos * pice)
        turtle.left(turtle.towards(center_x, center_y) - turtle.heading())
        turtle.forward(pice)
        turtle.right(90)
        draw_star(turtle.xcor(), turtle.ycor(), pice)
    # 隐藏海龟
    turtle.ht()
    # 显示绘图窗口
    turtle.mainloop()


if __name__ == '__main__':
    main()

九、Python语法
计算机的组成：运算器、控制器、存储器、输入设备、输出设备。
冯诺依曼体系：一是指出要将存储设备与中央处理器分开，二是提出了将数据以二进制方式编码。
二进制：在物理器件上面来说是很容器实现的（高压电表示1，低压电表示0.）
进制转换：二进制、十进制、八进制、十六进制
变量：在程序设计中，变量是一种存储数据的载体
数据：数值、文本、图形、音频、视频等各种各样的数据
常用的几种数据类型：整形、浮点型、字符串类型、布尔型、复数型
变量：计算机中的变量是实际存在的数据或者说是存储器中存储数据的一块内存空间，变量的值可以被读取和修改，这是所有计算和控制的基础。
对于每个变量我们需要给它取一个名字，就如同我们每个人都有属于自己的响亮的名字一样。
在python中，变量命名需要遵循以下这些必须遵守硬性规则和强烈建议遵守的非硬性规则
硬性规则：
变量名由字母、数字、下划线构成，数字不能开头
大小写敏感
不要跟关键词和系统保留字冲突。
PEP 8 要求：
用小写字母拼写，多个单词用下划线连接。
受保护的实例属性用单个下划线开头
私有的实例属性用两个下划线开头

变量的练习：
"""
使用变量保存数据并进行加减乘除运算

Version: 0.1
Author: 季延升
"""
a = 321
b = 12
print(a + b)    # 333
print(a - b)    # 309
print(a * b)    # 3852
print(a / b)    # 26.75

检查变量类型
"""
使用type()检查变量的类型

Version: 0.1
Author: 季延升
"""
a = 100
b = 12.345
c = 1 + 5j
d = 'hello, world'
e = True
print(type(a))    # <class 'int'>
print(type(b))    # <class 'float'>
print(type(c))    # <class 'complex'>
print(type(d))    # <class 'str'>
print(type(e))    # <class 'bool'>

变量类型转换
int(): 将一个数值或字符串转换成整数，可以指定进制。
float()：将一个字符串转换成浮点数。
str()：将指定的对象转换成字符串形式，可以指定编码。
chr()：将整数转换成该编码对应的字符串（一个字符）。
ord()：将字符串（一个字符）转换成对应的编码（整数）。


第二模块：模块和函数

Python的程序由包、模块和函数组成。
函数是一段可重用的有名称的代码。通过输入的参数值，返回需要的结果，并可存储在文件中供以后使用。几乎任何Python代码都可放在函数中。Python为函数提供了强大支持。
模块是处理某一类问题的集合，模块由函数和类组成。模块和常规Python程序之间的唯一区别是用途不同：模块用于编写其他程序。因此，模块通常没有main函数。
包是一个完成特定任务的工具箱，Python提供了许多有用的工具包，如字符串处理、图形用户接口、Web应用、图像处理等。使用自带的工具包，可以提高程序开发效率、减少编程复杂度，达到代码重用的效果。

自定以send_email函数
def send_email():
    pass
    
加入功能代码块
定义一个goods列表,里面标明name和price对应的数据。
goods = [
    {"name": "电脑", "price": 1999},
    {"name": "鼠标", "price": 10},
    {"name": "游艇", "price": 20},
    {"name": "美女", "price": 998}
]

循环获取列表里面的数据，提取索引，提取字典里面的键 ，提取字典里面的值。
for index in range(len(goods)):
    item = goods[index]
    print(index + 1, item['name'], item['price'])

调用函数send_email()
send_email()

循环获取输入值
while True:
    num = input("请输入要选择的商品序号(Q/q)：")
    if num.upper() == "Q":
        break
    if not num.isdecimal():
        print("用输入的格式错误")
        break
    num = int(num)
    send_email()
    if num > 4 or num < 0:
        print("范围选择错误")
        break
    target_index = num - 1
    choice_item = goods[target_index]
    print(choice_item["name"],choice_item['price'])
    send_email()

内置函数：len、bin、oct、hex
name = "你好呀"

data = len(name)
print(data)

内置模块：random
import random

num = random.randint(1, 10)
print(num)

data_list = [11, 22, 33, 44, 55]
data = random.choice(data_list)
print(data)

第三方模块：处理Excel

文件操作（字符串文本可读，字节类型可存储。）
name = "小白"

字符串转换字节
data = name.encode('utf-8')
print(data)

字节转换字符串
data = data.decode('utf-8')
print(data)

读字节类型文件操作步骤（图片、视频）
1.打开文件（以字节的方式）
file_object = open("info.txt", mode='rb')
2.读取文件内容，并赋值给data。
data = file_object.read()
3.关闭文件
file_object.close()
4.打印内容
print(data)
5.扩展可转回字符串
text = data.decode('utf-8')
6.打印字符串
print(text)

读字符串文件操作步骤
1.打开文件（以字符串的方式）
file_object = open("info.txt", mode='rt', encoding='utf-8')
2.读取文件内容，并赋值给data。
data = file_object.read()
3.关闭文件
file_object.close()
4.打印内容
print(data)

注意事项：文件打开操作需要注意当前读取的是'相对路径'，还是'绝对路径'。
绝对路径：绝对路径是指文件在硬盘上真正存在的路径。
相对路径：相对于自己的目标文件位置。
两者区别：
1.绝对路径是一个文件实际存在于硬盘中的路径。
2.相对路径，指的是与自身的目标档案相关的位置。
3.绝对路径是指可以从这个路径上查找文件夹，不管是从外部或内部存取。而相对路径则是与它本身相关的，其它地方的档案和路径，则只能在内部存取。

读取全路径(转义)：
file_object = open(r"C:\new\info.txt", mode='rt', encoding='utf-8')
data = file_object.read()
file_object.close()

读不到文件的时候会报错，可以添加判断判断路径是否存在。
import os

file_path = ""C:\new\info.txt"
exists = os.path.exists(file_path)
if exists:
    file_object = open(r"C:\new\info.txt", mode='rt', encoding='utf-8')
    data = file_object.read()
    file_object.close()
    print(data)
else:
    print("不存在")

写文件
##### 写二进制文件

`file_object = open('t1.txt', mode='wb')
file_object.write("你好".encode("utf-8"))
file_object.close()`



##### 写文本文件

`file_object = open('t1.txt', mode='wt', encoding='utf-8')
file_object.wirte('你好')
file_object.close()`



##### 复制文件

`f1 = open('a1.png', mode='wb')
content = f1.read()
f1.close()`

`f2 = open('a2.png', mode='wb')
f2.write(content)
f2.close()`



##### 用户注册

`user = input("请输入用户名：")
pwd = input("请输入密码：")
data = "{}-{}".format(user, pwd)
file_object = open("files/info.txt", mode='wt', encoding='utf-8')
file_object.write(data)
file_object.close()`



##### 多用户注册

`file_object = open("files/info.txt", mode='wb', encoding='utf-8')
while True:
    user = input("请输入用户名：")
    if user.upper() == Q:
        break
    pwd = input("请输入密码：")
    data = "{}-{}\n".format(user, pwd)
    file_object.write(data)
file_object.close()`



##### 去网上下载一点文本，文本信息写入文件

`import requests
res = requests.get(url="请求网址", header={"User-Agent": "模拟浏览器信息"})
file_object = open('file/log1.txt', mode='wb')
file_object.write(res.content)
file_object.close()`



##### 去网上下载一张图片，图片写入本地文件

`import requests
res = requests.get(url="请求网址", headers={"User-Agent": "模拟浏览器信息"})
file_object = open("files/美女.png", mode="wb")
file_object.write(res.content)
file_object.close()`



##### 文件打开模式


| 模式 | 代码         | 规则                                     |
| ---- | ------------ | ---------------------------------------- |
| 只读 | r、rt、rb    | 存在，读<br>不存在，创建再写             |
| 只写 | w、wt、wb    | 存在，清空在写<br />不存在，创建再写     |
| 只写 | x、xt、xb    | 存在，报错<br />不存在，创建再写         |
| 只写 | a、at、ab    | 存在，尾部追加。<br />不存在，创建再写。 |
| 读写 | r+、rb+      | 默认光标位置：起始位置                   |
| 读写 | w+、wb+      | 默认光标位置：起始位置（清空文件）       |
| 读写 | x+、xb+      | 默认光标位置：起始位置（新文件）         |
| 读写 | a+、at+、ab+ | 默认光标位置：末尾                       |

```
# r+、rt+、rb+，默认光标位置：起始位置
# roote-123
file_object = open('info.txt', mode='rt+')
data = file_object.read() # roote-123
print(data)
file_object.write('你好') # roote-123你好
file_object.close()

# roote-123
file_object = open('info.txt', mode='rt+')
file_object.write("hello") # hello-123
data = file_object.read()  # -123
print(data)
file_object.close()

# w+、wt+、wb+（清空文件）
file_object = open('info.txt', mode='wt+')

# 读取内容
data = file_object.read()
print(data)

# 写入内容
file_object.write('你好')

# 将光标位置重置起始
file_object.seek(0)

# 读取内容
data = file_object.read()
print(data)

file_object.close()

# x+、xt+、xb+，默认光标位置：起始位置（新文件）
# a+、at+、ab+，默认光标位置：末尾
file_object = open('info.txt', mode='at+')

# 写入内容 hello你好
file_object.write('你好')

# 将光标位置重置起始
file_object.seek(0)

# 读取内容 hello你好
data = file_object.read()
print(data)

file_object.close()

# 多用户注册
file_object = open('file/account.txt', mode='a')
while True:
    user = input("用户：")
    if user.upper() == "Q":
        break
    pwd = input("密码：")
    data = "{}-{}\n".format(user, pwd)
    file_object.write(data)
file_object.close()
```





