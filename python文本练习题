Day05：练习题
1. 写代码实现判断用户输入的值否以 "al"开头,如果是则输出 "是的" 否则 输出 "不是的"
2. 写代码实现判断用户输入的值否以"Nb"结尾,如果是则输出 "是的" 否则 输出 "不是的"
3. 将 name 变量对应的值中的 所有的"l"替换为 "p",并输出结果
4. 写代码实现对用户输入的值判断，是否为整数，如果是则转换为整型并输出，否则直接输出"请输入数字"
5. 对用户输入的数据使用"+"切割，判断输入的值是否都是数字？
   提示：用户输入的格式必须是以下+连接的格式，如 5+9 、alex+999
6. 写代码实现一个整数加法计算器(两个数相加)
   需求：提示用户输入：5+9或5+9或5+9，计算出两个值的和（提示：先分割再转换为整型，再相加）
7. 写代码实现一个整数加法计算器(两个数相加)
   需求：提示用户输入：5 +9或5+ 9或5 + 9，计算出两个值的和（提示：先分割再去除空白、再转换为整型，再相加）
8. 补充代码实现用户认证。
   需求：提示用户输入手机号、验证码，全都验证通过之后才算登录成功（验证码大小写不敏感）
   import random
   code = random.randrange(1000,9999) # 生成动态验证码
   msg = "欢迎登录PythonAV系统，您的验证码为：{},手机号为：{}".format(code,"15131266666")
   print(msg)
   # 请补充代码
9. 补充代码实现数据拼接
   data_list = []
   while True:
       hobby = input("请输入你的爱好（Q/q退出）：")
       if hobby.upper() == 'Q':
           break
       # 把输入的值添加到 data_list 中，如：data_list = ["小姨子","哥们的女朋友"]
       data_list.append(hobby)
       # 将所有的爱好通过符号 "、"拼接起来并输出
Day05：作业题
1. 请用代码实现如下进制的转换。
v1 = 675          # 请将v1转换为二进制（字符串类型）。
v2 = "0b11000101" # 请将二进制v2转换为十进制（整型）
v3 = "11000101"   # 请将二进制v3转换为十进制（整型）
2. 按要求实现
现有 `v1=123` 和 `v2=456`，请将这两个值转换为二进制，并将其二进制中的前缀 0b 去掉，然后将两个二进制拼接起来，最终再转换为整型（十进制）。
例如：
123  对应二进制为  "0b1111011" ，去除前缀0b之后的二进制为 "1111011"
456  对应二进制为  "0b111001000" ，去除前缀0b之后的二进制为 "111001000"
将两个二进制拼接起来的值为："1111011111001000"，再将此值转换为整型为：63432
3. 按要求实现
现有 `v1=123` 和 `v2=456`，请将这两个值转换为二进制，并将其二进制中的前缀 0b 去掉，再补足为2个字节（16位），然后将两个二进制拼接起来，最终再转换为整型（十进制）。
例如：
123  对应二进制为  "0b1111011" ，去除前缀0b之后的二进制为 "1111011" ，补足16位为  "00000000 01111011"
456  对应二进制为  "0b111001000" ，去除前缀0b之后的二进制为 "111001000"，，补足16位为  "00000001 11001000"
将两个二进制拼接起来的值为："00000000 0111101100000001 11001000"，再将此值转换为整型为：8061384
4. 列举你了解的那些数据类型的值转换为布尔值为False。
5. 看代码写结果：
if "":
    print(123)
else:
    print(456)

if 0:
    print(999)
else:
    print(666)

if "武沛齐":
    print(345)
else:
    print(110)
6. 让用户输入一段文本，请实现将文本中的敏感词 `苍老师`、`波波老师`替换为 `***`，最后并输入替换后的文本。
7. 有变量name = "aleX leNb " 完成如下操作：
- 移除 name 变量对应的值两边的空格,并输出处理结果
- 判断 name 变量是否以 "al" 开头,并输出结果
- 判断name变量是否以"Nb"结尾,并输出结果
- 将 name 变量对应的值中的 所有的"l" 替换为 "p",并输出结果
- 将 name 变量对应的值根据 所有的"l" 分割,并输出结果
- 将name变量对应的值根据第一个"l"分割,并输出结果
- 将 name 变量对应的值变大写,并输出结果
- 将 name 变量对应的值变小写,并输出结果
8. 如何实现字符串的翻转？
9. 有字符串s = "123a4b5c"
- 通过对s切片形成新的字符串 "123"
- 通过对s切片形成新的字符串 "a4b"
- 通过对s切片形成字符串 "c"
- 通过对s切片形成字符串 "ba2"
10. 使用while循环实现对字符串 message = "伤情最是晚凉天，憔悴厮人不堪言" 中每个字符进行输出。
11. 使用for循环实现对字符串 message = "伤情最是晚凉天，憔悴厮人不堪言" 中每个字符进行输出。
12. 使用for循环和range实现对字符串 message = "伤情最是晚凉天，憔悴厮人不堪言" 中每个字符进行倒叙输出。
13. 使用for循环实现输出倒计时效果，例如：输出内容依次是："倒计时3秒"，"倒计时2秒"，"倒计时1秒"。
14. 让用户输入一段文本，请计算文本中 "浪" 出现的次数，并输入结果。
15. 获取用户两次输入的内容，并提取其中的数字，然后实现数字的相加（转换为整型再相加）：
要求：
将num1中的的所有数字找到并拼接起来：1232312
将num1中的的所有数字找到并拼接起来：1218323
然后将两个数字进行相加。
num1 = input("请输入：") # asdfd123sf2312
num2 = input("请输入：") # a12dfd183sf23
# 请补充代码

Day06：练习题
1. 写代码，有如下列表，按照要求实现每一个功能。
li = ["alex", "WuSir", "ritian", "barry", "武沛齐"]
- 计算列表的长度并输出
- 列表中追加元素"seven",并输出添加后的列表
- 请在列表的第1个索引位置插入元素"Tony",并输出添加后的列表
- 请修改列表第2个索引位置的元素为"Kelly",并输出修改后的列表
- 请将列表的第3个位置的值改成 "妖怪"，并输出修改后的列表
- 请将列表 `data=[1,"a",3,4,"heart"]` 的每一个元素追加到列表 `li` 中，并输出添加后的列表
- 请将字符串 `s = "qwert"`的每一个元素到列表 `li` 中。
- 请删除列表中的元素"barry",并输出添加后的列表
- 请删除列表中的第2个元素，并输出删除元素后的列表
- 请删除列表中的第2至第4个元素，并输出删除元素后的列表
2. 写代码，有如下列表，利用切片实现每一个功能
li = [1, 3, 2, "a", 4, "b", 5,"c"]
- 通过对li列表的切片形成新的列表 [1,3,2]
- 通过对li列表的切片形成新的列表 ["a",4,"b"]
- 通过对li列表的切片形成新的列表  [1,2,4,5]
- 通过对li列表的切片形成新的列表 [3,"a","b"]
- 通过对li列表的切片形成新的列表 [3,"a","b","c"]
- 通过对li列表的切片形成新的列表  ["c"]
- 通过对li列表的切片形成新的列表 ["b","a",3]
3. 写代码，有如下列表，按照要求实现每一个功能。
lis = [2, 3, "k", ["qwe", 20, ["k1", ["tt", 3, "1"]], 89], "ab", "adv"]
- 将列表lis中的第2个索引位置的值变成大写，并打印列表。
- 将列表中的数字3变成字符串"100"
- 将列表中的字符串"tt"变成数字 101
- 在 "qwe"前面插入字符串："火车头"
4. 请用代码实现循环输出元素和值：users = ["武沛齐","景女神","肖大侠"] ，如：
0 武沛齐
1 景女神
2 肖大侠
5. 请用代码实现循环输出元素和值：users = ["武沛齐","景女神","肖大侠"] ，如：
1 武沛齐
2 景女神
3 肖大侠
6. 写代码实现以下功能
- 如有变量 goods = ['汽车','飞机','火箭'] 提示用户可供选择的商品：
0,汽车
1,飞机
2,火箭
- 用户输入索引后，将指定商品的内容拼接打印，如：用户输入0，则打印 您选择的商品是汽车。
7. 利用for循环和range 找出 0 ~ 50 以内能被3整除的数，并追加到一个列表。
8. 利用for循环和range 找出 0 ~ 50 以内能被3整除的数，并插入到列表的第0个索引位置，最终结果如下：
[48,45,42...]
9. 查找列表li中的元素，移除每个元素的空格，并找出以"a"开头，并添加到一个新列表中,最后循环打印这个新列表。
li = ["alexC", "AbC ", "egon", " riTiAn", "WuSir", "  aqc"]
10. 将以下车牌中所有 `京 `的车牌搞到一个列表中，并输出京牌车辆的数量。
data = ["京1231", "冀8899", "京166631", "晋989"]

Day06作业题：
1. 以下哪些数据类型转换为布尔值为False
0
1
""
-19
[]
[11,22]
(1)
(1,2,3)
()
2. 运算符操作
v1 = [] or "alex"
v2 = [11,22] and (1,2,)
3. 比较：` a = [1,2,3] `和 `b = [(1),(2),(3) ]` 以及 `c = [(1,),(2,),(3,) ]` 的区别？
4. 将字符串`text = "wupeiqi|alex|eric"`根据 `|` 分割为列表，然后列表转换为元组类型。
5. 根据如下规则创建一副扑克牌（排除大小王）。
# 花色列表
color_list = ["红桃","黑桃","方片","梅花"]
# 牌值
num_list = []
for num in range(1,14):
    num_list.append(num)
    result = []
# 请根据以上的花色和牌值创建一副扑克牌（排除大小王）
# 最终result的结果格式为： [ ("红桃",1), ("红桃",2) ... ]

Day07：练习题
1. 写代码实现
v1 = {'alex','武sir','肖大'}
v2 = []
# 循环提示用户输入，如果输入值在v1中存在，则追加到v2中，如果v1中不存在，则添加到v1中。（如果输入N或n则停止循环）
while True:
name = input("请输入姓名(N/n退出)：")
if name.upper() == "Q":
    break
    if name in v1:
        v2.append(name)
    else:
        v1.add(name)
2. 下面那些值不能做集合的元素
""
0
[11,22,33]   # 不能
[]           # 不能
(123)
{1,2,3}      # 不能
3. 模拟用户信息录入程序，已录入则不再创建。
user_info_set = set()
while True:
    name = input("请输入姓名：")
    age = input("请输入年龄：")
   	item = (name,age,)
       if item in user_info_set:
           print("该用户已录入")
   	else:
       	user_info_set.add(item)
4. 给你个列表去重。
v = [11,22,11,22,44455]
data = set(v) # {11,22,44455}
result = list(data) # [11,22,44455]

Day08：作业题
1. 根据需求写代码
dic = {'k1': "v1", "k2": "v2", "k3": [11,22,33]}
# 请在字典中添加一个键值对，"k4": "v4"，输出添加后的字典
# 请在修改字典中 "k1" 对应的值为 "alex"，输出修改后的字典
# 请在k3对应的值中追加一个元素 44，输出修改后的字典
# 请在k3对应的值的第 1 个位置插入个元素 18，输出修改后的字典
2. 根据需求写代码
dic1 = {
    'name':['alex',2,3,5],
    'job':'teacher',
    'oldboy':{'alex':['python1','python2',100]}
}
# 1，将name对应的列表追加⼀个元素’wusir’。
# 2，将name对应的列表中的alex全变成大写。
# 3，oldboy对应的字典加⼀个键值对’⽼男孩’:’linux’。
# 4，将oldboy对应的字典中的alex对应的列表中的python2删除
3. 循环提示用户输入，并将输入内容添加到字典中（如果输入N或n则停止循环）
例如：用户输入 x1|wupeiqi ,则需要再字典中添加键值对 {'x1':"wupeiqi"}
4. 判断以下值那个能做字典的key ？那个能做集合的元素？
- 1
- -1
- ""
- None
- [1,2]
- (1,)
- {11,22,33,4}
- {'name':'wupeiq','age':18}
5. 将字典的键和值分别追加到 key_list 和 value_list 两个列表中，如：
key_list = []
value_list = []
info = {'k1':'v1','k2':'v2','k3':'v3'}
6. 字典dic = {'k1': "v1", "k2": "v2", "k3": [11,22,33]}
a. 请循环输出所有的key
b. 请循环输出所有的value
c. 请循环输出所有的key和value
7. 请循环打印k2对应的值中的每个元素。
info = {
    'k1':'v1',
    'k2':[('alex'),('wupeiqi'),('oldboy')],
}
8. 有字符串"k: 1|k1:2|k2:3  |k3 :4" 处理成字典 {'k':1,'k1':2....}
9. 写代码
有如下值 li= [11,22,33,44,55,66,77,88,99,90] ,将所有大于 66 的值保存至字典的第一个key对应的列表中，将小于 66 的值保存至第二个key对应的列表中。
result = {'k1':[],'k2':[]}
10. 输出商品列表，用户输入序号，显示用户选中的商品
商品列表：
goods = [
    		{"name": "电脑", "price": 1999},
    		{"name": "鼠标", "price": 10},
    		{"name": "游艇", "price": 20},
    		{"name": "美女", "price": 998}
    	]
要求:
1：页面显示 序号 + 商品名称 + 商品价格，如：
1 电脑 1999
2 鼠标 10
...
2：用户输入选择的商品序号，然后打印商品名称及商品价格
3：如果用户输入的商品序号有误，则提示输入有误，并重新输入。
4：用户输入Q或者q，退出程序。